ðŸ”¹ Package declaration
package com.ems.app.pojo;


Your class is inside the pojo package.

pojo = Plain Old Java Object â†’ used to represent data objects.

ðŸ”¹ Imports
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;


lombok.Data â†’ generates getters, setters, toString, equals, hashCode automatically.

lombok.AllArgsConstructor â†’ generates a constructor with all fields.

lombok.NoArgsConstructor â†’ generates a default constructor (no parameters).

@Id â†’ marks id as the primary key for MongoDB documents.

@Document(collection = "employee") â†’ tells Spring this class maps to the employee collection in MongoDB.

ðŸ”¹ Annotations
@Data
@AllArgsConstructor
@NoArgsConstructor
@Document(collection = "employee")


@Data â†’ Instead of writing 50 lines of getters/setters, Lombok generates them for you at compile time.

@AllArgsConstructor â†’ Generates a constructor like:

public Employee(String id, String employeeName, String employeeEmail, Long employeePhone, String employeeGender, String employeeSalary, String employeeRole) { ... }


@NoArgsConstructor â†’ Generates:

public Employee() {}


@Document(collection = "employee") â†’ This class is a MongoDB document stored in the "employee" collection.

ðŸ”¹ Class and Fields
public class Employee {

    @Id private String id;
    private String employeeName;
    private String employeeEmail;
    private Long employeePhone;
    private String employeeGender;
    private String employeeSalary;
    private String employeeRole;
}


id â†’ unique identifier (_id) in MongoDB.

employeeName â†’ employeeâ€™s name.

employeeEmail â†’ employeeâ€™s email.

employeePhone â†’ employeeâ€™s phone number (Long since itâ€™s numeric).

employeeGender â†’ Male/Female/Other.

employeeSalary â†’ stored as String (could also be Double if you want to do calculations).

employeeRole â†’ designation/role (e.g., Developer, Manager).

âœ… Example: Document stored in MongoDB

When you save an Employee, MongoDB will store it like this:

{
  "_id": "EMP1234",
  "employeeName": "Ashish Yadav",
  "employeeEmail": "ashish@example.com",
  "employeePhone": 9876543210,
  "employeeGender": "Male",
  "employeeSalary": "60000",
  "employeeRole": "Software Developer"
}